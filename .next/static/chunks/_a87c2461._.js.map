{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/GuestLinked/guestlinked/lib/supabaseClient.js"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nlet supabaseInstance;\r\n\r\nexport const getSupabase = () => {\r\n  if (!supabaseInstance) {\r\n    if (!supabaseUrl || !supabaseAnonKey) {\r\n      throw new Error('Missing Supabase environment variables. Please check NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY are set.');\r\n    }\r\n    supabaseInstance = createBrowserClient(supabaseUrl, supabaseAnonKey);\r\n  }\r\n  return supabaseInstance;\r\n};\r\n\r\n// Export a direct reference for easier usage\r\nexport const supabase = getSupabase();\r\n"],"names":[],"mappings":";;;;AAEoB;AAFpB;AAAA;;AAEA,MAAM;AACN,MAAM;AAEN,IAAI;AAEG,MAAM,cAAc;IACzB,IAAI,CAAC,kBAAkB;QACrB,uCAAsC;;QAEtC;QACA,mBAAmB,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa;IACtD;IACA,OAAO;AACT;AAGO,MAAM,WAAW","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///E:/GuestLinked/guestlinked/app/buyer/add-website/page.jsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { getSupabase } from '@/lib/supabaseClient';\n\n// CategoryDropdown component for multi-select functionality\nfunction CategoryDropdown({ categories, selectedCategories, onCategoryToggle }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const filteredCategories = categories.filter(category =>\n    category.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleToggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleCategoryClick = (category) => {\n    onCategoryToggle(category);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.category-dropdown')) {\n        setIsOpen(false);\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('click', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  return (\n    <div className=\"relative category-dropdown\">\n      {/* Dropdown trigger */}\n      <div\n        onClick={handleToggleDropdown}\n        className=\"w-full px-3 py-2 bg-gray-600 border border-gray-500 rounded-md text-white cursor-pointer focus:outline-none focus:ring-2 focus:ring-blue-500 flex justify-between items-center\"\n      >\n        <span className=\"text-sm\">\n          {selectedCategories.length === 0\n            ? 'Select categories...'\n            : `${selectedCategories.length} category${selectedCategories.length > 1 ? 'ies' : 'y'} selected`}\n        </span>\n        <svg\n          className={`w-4 h-4 transition-transform ${isOpen ? 'rotate-180' : ''}`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </div>\n\n      {/* Dropdown menu */}\n      {isOpen && (\n        <div className=\"absolute z-50 w-full mt-1 bg-gray-600 border border-gray-500 rounded-md shadow-lg\">\n          {/* Search input */}\n          <div className=\"p-2 border-b border-gray-500\">\n            <input\n              type=\"text\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              placeholder=\"Search categories...\"\n              className=\"w-full px-2 py-1 bg-gray-700 border border-gray-400 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n            />\n          </div>\n          \n          {/* Categories list */}\n          <div className=\"max-h-40 overflow-y-auto\">\n            {filteredCategories.length === 0 ? (\n              <div className=\"p-2 text-gray-400 text-sm\">No categories found</div>\n            ) : (\n              filteredCategories.map((category) => (\n                <label\n                  key={category}\n                  className=\"flex items-center space-x-2 p-2 hover:bg-gray-500 cursor-pointer\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedCategories.includes(category)}\n                    onChange={() => handleCategoryClick(category)}\n                    className=\"form-checkbox text-blue-500 bg-gray-700 border-gray-400 rounded focus:ring-blue-500\"\n                  />\n                  <span className=\"text-sm text-white\">{category}</span>\n                </label>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Selected categories display */}\n      {selectedCategories.length > 0 && (\n        <div className=\"mt-2 flex flex-wrap gap-1\">\n          {selectedCategories.map((cat) => (\n            <span key={cat} className=\"bg-blue-600 text-white px-2 py-1 rounded-md text-xs\">\n              {cat}\n              <button\n                type=\"button\"\n                onClick={() => onCategoryToggle(cat)}\n                className=\"ml-1 text-blue-200 hover:text-white\"\n              >\n                ×\n              </button>\n            </span>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Component to display existing websites\nfunction ExistingWebsites({ user }) {\n  const [existingWebsites, setExistingWebsites] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingWebsite, setEditingWebsite] = useState(null);\n  const [editFormData, setEditFormData] = useState({ name: '', url: '', category: [] });\n  const [message, setMessage] = useState('');\n\n  // Comprehensive categories list\n  const categories = [\n    'Agriculture',\n    'Animals and Pets',\n    'Art',\n    'Automobiles',\n    'Beauty',\n    'Books',\n    'Business',\n    'Career and Employment',\n    'Computers',\n    'Construction and Repairs',\n    'Culture',\n    'E-commerce',\n    'Education',\n    'Entertainment',\n    'Environment',\n    'Equipment',\n    'Fashion',\n    'Finance',\n    'Food',\n    'For Children',\n    'For Men',\n    'For Women',\n    'Gadgets',\n    'Games',\n    'Hardware development',\n    'Health',\n    'Home and Family',\n    'Humor',\n    'Internet',\n    'Law',\n    'Leisure and Hobbies',\n    'Lifestyle',\n    'Literature',\n    'Manufacturing',\n    'Marketing and Advertising',\n    'Media',\n    'Miscellaneous',\n    'Mobile',\n    'Movies',\n    'Music',\n    'Nature',\n    'News',\n    'News and Media',\n    'Personal Blogs',\n    'Photography',\n    'Places',\n    'Politics',\n    'Programming',\n    'Public Service',\n    'Real Estate',\n    'Science',\n    'Shopping',\n    'Society',\n    'Software development',\n    'Sports',\n    'Startups',\n    'Technology',\n    'Transport',\n    'Travel',\n    'Web-development'\n  ];\n\n  useEffect(() => {\n    if (user) {\n      fetchExistingWebsites();\n    }\n  }, [user]);\n\n  const fetchExistingWebsites = async () => {\n    try {\n      const supabase = getSupabase();\n      const { data, error } = await supabase\n        .from('buyer_websites_tb')\n        .select('*')\n        .eq('buyer_id', user.user_id)\n        .order('added_at', { ascending: false });\n\n      if (error) {\n        console.error('Error fetching websites:', error);\n      } else {\n        setExistingWebsites(data || []);\n      }\n    } catch (error) {\n      console.error('Error in fetchExistingWebsites:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEdit = (website) => {\n    setEditingWebsite(website.id);\n    setEditFormData({\n      name: website.website_name,\n      url: website.website_url,\n      category: Array.isArray(website.category) ? website.category : [website.category].filter(Boolean)\n    });\n    setMessage('');\n  };\n\n  const handleCancelEdit = () => {\n    setEditingWebsite(null);\n    setEditFormData({ name: '', url: '', category: [] });\n    setMessage('');\n  };\n\n  const handleCategoryToggle = (category) => {\n    setEditFormData(prev => ({\n      ...prev,\n      category: prev.category.includes(category)\n        ? prev.category.filter(c => c !== category)\n        : [...prev.category, category]\n    }));\n  };\n\n  const handleSaveEdit = async (websiteId) => {\n    if (!editFormData.name.trim() || !editFormData.url.trim() || editFormData.category.length === 0) {\n      setMessage('All fields are required');\n      return;\n    }\n\n    const urlPattern = /^https?:\\/\\/.+/;\n    if (!urlPattern.test(editFormData.url.trim())) {\n      setMessage('Please enter a valid URL starting with http:// or https://');\n      return;\n    }\n\n    try {\n      const supabase = getSupabase();\n      const { error } = await supabase\n        .from('buyer_websites_tb')\n        .update({\n          website_name: editFormData.name.trim(),\n          website_url: editFormData.url.trim(),\n          category: editFormData.category\n        })\n        .eq('id', websiteId);\n\n      if (error) {\n        console.error('Error updating website:', error);\n        setMessage('Error updating website');\n      } else {\n        setMessage('Website updated successfully!');\n        setEditingWebsite(null);\n        fetchExistingWebsites(); // Refresh the list\n        setTimeout(() => setMessage(''), 3000);\n      }\n    } catch (error) {\n      console.error('Error in handleSaveEdit:', error);\n      setMessage('Error updating website');\n    }\n  };\n\n  const handleDelete = async (websiteId, websiteName) => {\n    if (!confirm(`Are you sure you want to delete \"${websiteName}\"? This action cannot be undone.`)) {\n      return;\n    }\n\n    try {\n      const supabase = getSupabase();\n      const { error } = await supabase\n        .from('buyer_websites_tb')\n        .delete()\n        .eq('id', websiteId);\n\n      if (error) {\n        console.error('Error deleting website:', error);\n        setMessage('Error deleting website');\n      } else {\n        setMessage('Website deleted successfully!');\n        fetchExistingWebsites(); // Refresh the list\n        setTimeout(() => setMessage(''), 3000);\n      }\n    } catch (error) {\n      console.error('Error in handleDelete:', error);\n      setMessage('Error deleting website');\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  return (\n    <div className=\"mt-8 bg-gray-800 rounded-lg p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-semibold\">Your Websites</h2>\n        <span className=\"text-gray-400 text-sm\">\n          {existingWebsites.length} website{existingWebsites.length !== 1 ? 's' : ''}\n        </span>\n      </div>\n\n      {message && (\n        <div className={`mb-4 p-3 rounded-md ${\n          message.includes('successfully') \n            ? 'bg-green-900 text-green-300' \n            : 'bg-red-900 text-red-300'\n        }`}>\n          {message}\n        </div>\n      )}\n\n      {loading ? (\n        <div className=\"text-center py-8\">\n          <div className=\"text-gray-400\">Loading your websites...</div>\n        </div>\n      ) : existingWebsites.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <div className=\"text-gray-400\">No websites added yet</div>\n          <p className=\"text-sm text-gray-500 mt-2\">Add your first website using the form above</p>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          {existingWebsites.map((website) => (\n            <div key={website.id} className=\"bg-gray-700 rounded-lg p-4\">\n              {editingWebsite === website.id ? (\n                // Edit mode\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <input\n                      type=\"text\"\n                      value={editFormData.name}\n                      onChange={(e) => setEditFormData(prev => ({ ...prev, name: e.target.value }))}\n                      className=\"px-3 py-2 bg-gray-600 border border-gray-500 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Website name\"\n                    />\n                    <input\n                      type=\"url\"\n                      value={editFormData.url}\n                      onChange={(e) => setEditFormData(prev => ({ ...prev, url: e.target.value }))}\n                      className=\"px-3 py-2 bg-gray-600 border border-gray-500 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Website URL\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                      Categories * (Select multiple)\n                    </label>\n                    <CategoryDropdown\n                      categories={categories}\n                      selectedCategories={editFormData.category}\n                      onCategoryToggle={handleCategoryToggle}\n                    />\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => handleSaveEdit(website.id)}\n                      className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md text-sm transition-colors\"\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={handleCancelEdit}\n                      className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-md text-sm transition-colors\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                // View mode\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold text-white mb-1\">{website.website_name}</h3>\n                    <a\n                      href={website.website_url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-blue-400 hover:text-blue-300 text-sm break-all\"\n                    >\n                      {website.website_url}\n                    </a>\n                    <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-400\">\n                      <div className=\"flex flex-wrap gap-1\">\n                        {(Array.isArray(website.category) ? website.category : [website.category]).filter(Boolean).map((cat, index) => (\n                          <span key={index} className=\"bg-gray-600 px-2 py-1 rounded text-xs\">\n                            {cat}\n                          </span>\n                        ))}\n                      </div>\n                      <span>Added {formatDate(website.added_at)}</span>\n                    </div>\n                  </div>\n                  <div className=\"flex space-x-2 ml-4\">\n                    <button\n                      onClick={() => handleEdit(website)}\n                      className=\"p-2 text-blue-400 hover:text-blue-300 hover:bg-gray-600 rounded-md transition-colors\"\n                      title=\"Edit website\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                    </button>\n                    <button\n                      onClick={() => handleDelete(website.id, website.website_name)}\n                      className=\"p-2 text-red-400 hover:text-red-300 hover:bg-gray-600 rounded-md transition-colors\"\n                      title=\"Delete website\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function AddWebsite() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  const router = useRouter();\n\n  const [websites, setWebsites] = useState([{ id: 1, name: '', url: '', category: [] }]);\n  const [nextId, setNextId] = useState(2);\n\n  // Comprehensive categories list\n  const categories = [\n    'Agriculture',\n    'Animals and Pets',\n    'Art',\n    'Automobiles',\n    'Beauty',\n    'Books',\n    'Business',\n    'Career and Employment',\n    'Computers',\n    'Construction and Repairs',\n    'Culture',\n    'E-commerce',\n    'Education',\n    'Entertainment',\n    'Environment',\n    'Equipment',\n    'Fashion',\n    'Finance',\n    'Food',\n    'For Children',\n    'For Men',\n    'For Women',\n    'Gadgets',\n    'Games',\n    'Hardware development',\n    'Health',\n    'Home and Family',\n    'Humor',\n    'Internet',\n    'Law',\n    'Leisure and Hobbies',\n    'Lifestyle',\n    'Literature',\n    'Manufacturing',\n    'Marketing and Advertising',\n    'Media',\n    'Miscellaneous',\n    'Mobile',\n    'Movies',\n    'Music',\n    'Nature',\n    'News',\n    'News and Media',\n    'Personal Blogs',\n    'Photography',\n    'Places',\n    'Politics',\n    'Programming',\n    'Public Service',\n    'Real Estate',\n    'Science',\n    'Shopping',\n    'Society',\n    'Software development',\n    'Sports',\n    'Startups',\n    'Technology',\n    'Transport',\n    'Travel',\n    'Web-development'\n  ];\n\n  useEffect(() => {\n    const checkUser = async () => {\n      const supabase = getSupabase();\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        router.push('/');\n        return;\n      }\n\n      // Fetch user settings to verify role\n      const { data: settings, error: settingsError } = await supabase\n        .from('users_settings_tb')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n\n      if (settingsError || !settings) {\n        console.error('Error fetching user settings:', settingsError);\n        router.push('/');\n        return;\n      }\n\n      // Only buyers can add websites\n      if (settings.role !== 'Buyer') {\n        if (settings.role === 'Seller') {\n          router.push('/seller/seller-dashboard');\n        } else if (settings.role === 'Agent') {\n          router.push('/agent/dashboard');\n        } else {\n          router.push('/dashboard');\n        }\n        return;\n      }\n\n      setUser(settings);\n      setLoading(false);\n    };\n\n    checkUser();\n  }, [router]);\n\n  const handleInputChange = (id, field, value) => {\n    setWebsites(prev => \n      prev.map(website => \n        website.id === id ? { ...website, [field]: value } : website\n      )\n    );\n  };\n\n  const handleCategoryToggle = (websiteId, category) => {\n    setWebsites(prev =>\n      prev.map(website => {\n        if (website.id === websiteId) {\n          const currentCategories = Array.isArray(website.category) ? website.category : [];\n          const newCategories = currentCategories.includes(category)\n            ? currentCategories.filter(c => c !== category)\n            : [...currentCategories, category];\n          return { ...website, category: newCategories };\n        }\n        return website;\n      })\n    );\n  };\n\n  const addWebsiteField = () => {\n    setWebsites(prev => [...prev, { id: nextId, name: '', url: '', category: [] }]);\n    setNextId(prev => prev + 1);\n  };\n\n  const removeWebsiteField = (id) => {\n    if (websites.length > 1) {\n      setWebsites(prev => prev.filter(website => website.id !== id));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Filter out entries with empty required fields\n    const validWebsites = websites.filter(website => \n      website.name.trim() && website.url.trim() && Array.isArray(website.category) && website.category.length > 0\n    );\n    \n    if (validWebsites.length === 0) {\n      setMessage('Please fill in all fields for at least one website');\n      return;\n    }\n\n    // Validate URL format\n    const urlPattern = /^https?:\\/\\/.+/;\n    const invalidUrls = validWebsites.filter(website => !urlPattern.test(website.url.trim()));\n    \n    if (invalidUrls.length > 0) {\n      setMessage('Please enter valid URLs starting with http:// or https://');\n      return;\n    }\n\n    setSubmitting(true);\n    setMessage('');\n\n    try {\n      const supabase = getSupabase();\n      \n      // Insert websites into buyer_websites_tb table\n      const websitesToInsert = validWebsites.map(website => ({\n        buyer_id: user.user_id,\n        website_name: website.name.trim(),\n        website_url: website.url.trim(),\n        category: website.category, // Store as array as per table schema\n        added_at: new Date().toISOString()\n      }));\n\n      const { error } = await supabase\n        .from('buyer_websites_tb')\n        .insert(websitesToInsert);\n\n    if (error) {\n        console.error('Error adding websites:', error);\n        setMessage('Error adding websites. Please try again.');\n    } else {\n        setMessage(`Successfully added ${validWebsites.length} website${validWebsites.length > 1 ? 's' : ''}!`);\n        \n      // Reset form\n        setWebsites([{ id: 1, name: '', url: '', category: [] }]);\n        setNextId(2);\n        \n        // Redirect after success\n        setTimeout(() => {\n          router.push('/buyer/buyer-dashboard');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error submitting websites:', error);\n      setMessage('An error occurred while adding the websites');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-white text-xl\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"mb-8\">\n            <button\n              onClick={() => router.back()}\n              className=\"text-blue-400 hover:text-blue-300 transition-colors duration-200 mb-4\"\n            >\n              ← Back to Dashboard\n            </button>\n            <h1 className=\"text-3xl font-bold mb-2\">Add Your Websites</h1>\n          </div>\n\n          <div className=\"bg-gray-800 rounded-lg p-6\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"space-y-6\">\n                <label className=\"block text-lg font-medium text-gray-300 mb-4\">\n                  Website Details *\n                </label>\n                \n                {websites.map((website, index) => (\n                  <div key={website.id} className=\"bg-gray-700 rounded-lg p-6 relative\">\n                    {websites.length > 1 && (\n                      <div className=\"flex justify-end mb-4\">\n                        <button\n                          type=\"button\"\n                          onClick={() => removeWebsiteField(website.id)}\n                          className=\"p-2 text-red-400 hover:text-red-300 hover:bg-gray-600 rounded-md transition-colors duration-200\"\n                          title=\"Remove website\"\n                        >\n                          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                          </svg>\n                        </button>\n                      </div>\n                    )}\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                          Website Name *\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={website.name}\n                          onChange={(e) => handleInputChange(website.id, 'name', e.target.value)}\n                          className=\"w-full px-3 py-2 bg-gray-600 border border-gray-500 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                          placeholder=\"My Business Website\"\n                          required\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                          Website URL *\n                </label>\n                <input\n                          type=\"url\"\n                          value={website.url}\n                          onChange={(e) => handleInputChange(website.id, 'url', e.target.value)}\n                          className=\"w-full px-3 py-2 bg-gray-600 border border-gray-500 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                          placeholder=\"https://example.com\"\n                          required\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"mt-4\">\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Categories * (Select multiple)\n                      </label>\n                      <CategoryDropdown\n                        categories={categories}\n                        selectedCategories={Array.isArray(website.category) ? website.category : []}\n                        onCategoryToggle={(category) => handleCategoryToggle(website.id, category)}\n                      />\n                    </div>\n                  </div>\n                ))}\n\n                <button\n                  type=\"button\"\n                  onClick={addWebsiteField}\n                  className=\"flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors duration-200 p-3 border-2 border-dashed border-gray-600 hover:border-blue-400 rounded-lg w-full justify-center\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  <span>Add another website</span>\n                </button>\n              </div>\n\n              {message && (\n                <div className={`p-4 rounded-md ${\n                  message.includes('Successfully') \n                    ? 'bg-green-900 text-green-300' \n                    : 'bg-red-900 text-red-300'\n                }`}>\n                  {message}\n                </div>\n              )}\n\n              <div className=\"bg-gray-700 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-300 mb-2\">💡 Tips:</h3>\n                <ul className=\"text-sm text-gray-400 space-y-1\">\n                  <li>• Add your websites for guest posting</li>\n                  <li>• Website name should be descriptive (e.g., \"My Tech Blog\")</li>\n                  <li>• URLs must include http:// or https://</li>\n                  <li>• Use the dropdown to select multiple relevant categories</li>\n                </ul>\n              </div>\n\n              <div className=\"flex space-x-4\">\n              <button\n                type=\"submit\"\n                  disabled={submitting}\n                  className=\"flex-1 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 text-white py-3 px-6 rounded-md font-medium transition-colors duration-200\"\n                >\n                 {submitting ? 'Adding Websites...' : `Add Websites`}\n                  {/* {submitting ? 'Adding Websites...' : `Add ${websites.filter(w => w.name.trim() && w.url.trim() && Array.isArray(w.category) && w.category.length > 0).length || 1} Website${websites.filter(w => w.name.trim() && w.url.trim() && Array.isArray(w.category) && w.category.length > 0).length !== 1 ? 's' : ''}`} */}\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => router.back()}\n                  className=\"px-6 py-3 bg-gray-600 hover:bg-gray-700 text-white rounded-md font-medium transition-colors duration-200\"\n                >\n                  Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n\n          <ExistingWebsites user={user} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}