{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///E:/GuestLinked/guestlinked/lib/supabaseClient.js"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nlet supabaseInstance;\r\n\r\nexport const getSupabase = () => {\r\n  if (!supabaseInstance) {\r\n    if (!supabaseUrl || !supabaseAnonKey) {\r\n      throw new Error('Missing Supabase environment variables. Please check NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY are set.');\r\n    }\r\n    supabaseInstance = createBrowserClient(supabaseUrl, supabaseAnonKey);\r\n  }\r\n  return supabaseInstance;\r\n};\r\n\r\n// Export a direct reference for easier usage\r\nexport const supabase = getSupabase();\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,MAAM;AACN,MAAM;AAEN,IAAI;AAEG,MAAM,cAAc;IACzB,IAAI,CAAC,kBAAkB;QACrB,uCAAsC;;QAEtC;QACA,mBAAmB,CAAA,GAAA,0KAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa;IACtD;IACA,OAAO;AACT;AAGO,MAAM,WAAW","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///E:/GuestLinked/guestlinked/app/components/Navbar.jsx"],"sourcesContent":["'use client';\r\n\r\nimport Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter, usePathname } from 'next/navigation';\r\nimport { getSupabase } from '@/lib/supabaseClient';\r\n\r\nexport default function Navbar() {\r\n  const [user, setUser] = useState(null);\r\n  const [userSettings, setUserSettings] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n\r\n  useEffect(() => {\r\n    const fetchUserAndSettings = async () => {\r\n      const supabase = getSupabase();\r\n      \r\n      try {\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        \r\n        if (user) {\r\n          setUser(user);\r\n          \r\n          // Fetch user settings with minimal data needed for navbar\r\n          const { data: settings, error: settingsError } = await supabase\r\n            .from('users_settings_tb')\r\n            .select('name, role')\r\n            .eq('user_id', user.id)\r\n            .single();\r\n\r\n          if (!settingsError && settings) {\r\n            setUserSettings(settings);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserAndSettings();\r\n\r\n    const supabase = getSupabase();\r\n    const { data: authListener } = supabase.auth.onAuthStateChange(async (event, session) => {\r\n      if (event === 'SIGNED_OUT') {\r\n        setUser(null);\r\n        setUserSettings(null);\r\n        router.push('/');\r\n      } else if (event === 'SIGNED_IN' && session?.user) {\r\n        setUser(session.user);\r\n        \r\n        // Fetch user settings for the newly signed in user with minimal data\r\n        const { data: settings, error: settingsError } = await supabase\r\n          .from('users_settings_tb')\r\n          .select('name, role')\r\n          .eq('user_id', session.user.id)\r\n          .single();\r\n\r\n        if (!settingsError && settings) {\r\n          setUserSettings(settings);\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      authListener.subscription.unsubscribe();\r\n    };\r\n  }, [router]);\r\n\r\n  const handleSignOut = async () => {\r\n    const supabase = getSupabase();\r\n    await supabase.auth.signOut();\r\n  };\r\n\r\n  // Define navigation items based on user role\r\n  const getNavItems = () => {\r\n    if (!user || !userSettings) return [];\r\n\r\n    const commonItems = [\r\n      { href: '/buyer/websites', label: 'Browse Websites', requireAuth: false },\r\n    ];\r\n\r\n    if (userSettings.role === 'Buyer') {\r\n      return [\r\n        { href: '/buyer/buyer-dashboard', label: 'Dashboard', requireAuth: true },\r\n        ...commonItems,\r\n        { href: '/my-orders', label: 'My Orders', requireAuth: true },\r\n      ];\r\n    } else if (userSettings.role === 'Seller') {\r\n      return [\r\n        { href: '/seller/seller-dashboard', label: 'Dashboard', requireAuth: true },\r\n        ...commonItems,\r\n        { href: '/add-website', label: 'Add Website', requireAuth: true },\r\n        { href: '/manage-orders', label: 'Manage Orders', requireAuth: true },\r\n      ];\r\n    } else {\r\n      // Fallback for users without specific roles\r\n      return [\r\n        { href: '/dashboard', label: 'Dashboard', requireAuth: true },\r\n        ...commonItems,\r\n        { href: '/add-website', label: 'Submit Site', requireAuth: true },\r\n      ];\r\n    }\r\n  };\r\n\r\n  const navItems = getNavItems();\r\n\r\n  if (loading) {\r\n    return (\r\n      <nav className=\"bg-gray-900 bg-opacity-90 backdrop-blur-md text-white shadow-lg fixed top-0 left-0 right-0 z-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <Link href=\"/\" className=\"flex-shrink-0 font-bold text-xl tracking-wider text-white\">\r\n              GuestLinked\r\n            </Link>\r\n            <div className=\"animate-pulse\">\r\n              <div className=\"h-4 bg-gray-600 rounded w-24\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav className=\"bg-gray-900 bg-opacity-90 backdrop-blur-md text-white shadow-lg fixed top-0 left-0 right-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-16\">\r\n          <div className=\"flex items-center\">\r\n            <Link href=\"/\" className=\"flex-shrink-0 font-bold text-xl tracking-wider text-white\">\r\n              GuestLinked\r\n            </Link>\r\n            <div className=\"ml-10 flex items-baseline space-x-4\">\r\n              {navItems.map((item) => (\r\n                (!item.requireAuth || user) && (\r\n                  <Link\r\n                    key={item.href}\r\n                    href={item.href}\r\n                    className={`px-3 py-2 rounded-md text-sm font-medium transition-colors duration-300 ${\r\n                      pathname === item.href \r\n                        ? 'bg-gray-700 text-white' \r\n                        : 'text-gray-100 hover:bg-gray-700 hover:text-white'\r\n                    }`}\r\n                  >\r\n                    {item.label}\r\n                  </Link>\r\n                )\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            {user && userSettings ? (\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"text-right\">\r\n                  <p className=\"text-sm font-medium text-white\">\r\n                    {userSettings.name || 'User'}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-300\">\r\n                    {user.email}\r\n                  </p>\r\n                </div>\r\n                <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\r\n                  <span className=\"text-sm font-bold text-white\">\r\n                    {userSettings.name?.[0]?.toUpperCase() || 'U'}\r\n                  </span>\r\n                </div>\r\n                <button\r\n                  onClick={handleSignOut}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-300 flex items-center\"\r\n                >\r\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n                  </svg>\r\n                  Sign Out\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Link \r\n                href=\"/\" \r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-300\"\r\n              >\r\n                Sign In\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///E:/GuestLinked/guestlinked/app/my-orders/page.jsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Navbar from '../components/Navbar';\r\nimport { getSupabase } from '@/lib/supabaseClient';\r\n\r\nexport default function MyOrders() {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [websites, setWebsites] = useState([]);\r\n  const [filteredWebsites, setFilteredWebsites] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [websitesLoading, setWebsitesLoading] = useState(false);\r\n  const [ordersLoading, setOrdersLoading] = useState(false);\r\n  const [showOrderModal, setShowOrderModal] = useState(false);\r\n  const [selectedWebsite, setSelectedWebsite] = useState(null);\r\n  const [orderData, setOrderData] = useState({\r\n    article_title: '',\r\n    article_content: '',\r\n    target_url: '',\r\n    anchor_text: '',\r\n    special_requirements: '',\r\n    budget: ''\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [activeTab, setActiveTab] = useState('my-orders'); // Start with orders for faster perceived loading\r\n  \r\n  // Website filtering state\r\n  const [websiteFilters, setWebsiteFilters] = useState({\r\n    search: '',\r\n    minDA: '',\r\n    maxPrice: '',\r\n    category: ''\r\n  });\r\n  \r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      try {\r\n        const supabase = getSupabase();\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        \r\n        if (!user) {\r\n          router.push('/');\r\n          return;\r\n        }\r\n\r\n        // Fetch user settings to verify role - only get essential fields\r\n        const { data: settings, error: settingsError } = await supabase\r\n          .from('users_settings_tb')\r\n          .select('role')\r\n          .eq('user_id', user.id)\r\n          .single();\r\n\r\n        if (settingsError || !settings) {\r\n          console.error('Error fetching user settings:', settingsError);\r\n          router.push('/');\r\n          return;\r\n        }\r\n\r\n        // Only buyers can access this page\r\n        if (settings.role !== 'Buyer') {\r\n          if (settings.role === 'Seller') {\r\n            router.push('/seller/seller-dashboard');\r\n          } else {\r\n            router.push('/dashboard');\r\n          }\r\n          return;\r\n        }\r\n\r\n        setUser(user);\r\n        setLoading(false);\r\n        \r\n        // Load orders immediately (most common use case)\r\n        loadMyOrders(user.id);\r\n      } catch (error) {\r\n        console.error('Error in checkUser:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkUser();\r\n  }, [router]);\r\n\r\n  const loadWebsites = async () => {\r\n    if (websites.length > 0) return; // Don't reload if already loaded\r\n    \r\n    setWebsitesLoading(true);\r\n    const supabase = getSupabase();\r\n    \r\n    // Add timeout to prevent infinite loading\r\n    const timeoutId = setTimeout(() => {\r\n      console.log('Website loading timeout - setting empty state');\r\n      setWebsites([]);\r\n      setFilteredWebsites([]);\r\n      setWebsitesLoading(false);\r\n    }, 10000); // 10 second timeout\r\n    \r\n    try {\r\n      // Get top 50 websites based on quality metrics (DA, traffic, etc.)\r\n      const { data: websitesData, error: websitesError } = await supabase\r\n        .from('web_sites')\r\n        .select('*')\r\n        .not('moz_da', 'is', null)\r\n        .not('similarweb_traffic', 'is', null)\r\n        .order('moz_da', { ascending: false })\r\n        .order('similarweb_traffic', { ascending: false })\r\n        .limit(50);\r\n\r\n      if (websitesError) {\r\n        console.error('Error loading websites:', websitesError);\r\n        setWebsitesLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (!websitesData || websitesData.length === 0) {\r\n        console.log('No websites found in database');\r\n        setWebsites([]);\r\n        setFilteredWebsites([]);\r\n        setWebsitesLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log(`Loaded ${websitesData.length} top websites from database`);\r\n\r\n      // Get seller names for the websites (only if seller_id exists)\r\n      const websitesWithSellerIds = websitesData.filter(w => w.seller_id);\r\n      \r\n      if (websitesWithSellerIds.length === 0) {\r\n        // No seller IDs, just use websites as-is\r\n        const websitesWithSellers = websitesData.map(website => ({\r\n          ...website,\r\n          seller_name: 'Unknown'\r\n        }));\r\n        setWebsites(websitesWithSellers);\r\n        setFilteredWebsites(websitesWithSellers);\r\n        setWebsitesLoading(false);\r\n        return;\r\n      }\r\n\r\n      const sellerIds = [...new Set(websitesWithSellerIds.map(w => w.seller_id))];\r\n      const { data: sellersData, error: sellersError } = await supabase\r\n        .from('users_settings_tb')\r\n        .select('user_id, name')\r\n        .in('user_id', sellerIds);\r\n\r\n      if (sellersError) {\r\n        console.error('Error loading sellers:', sellersError);\r\n        // Continue without seller names\r\n      }\r\n\r\n      // Combine the data\r\n      const websitesWithSellers = websitesData.map(website => ({\r\n        ...website,\r\n        seller_name: sellersData?.find(s => s.user_id === website.seller_id)?.name || 'Unknown'\r\n      }));\r\n\r\n      setWebsites(websitesWithSellers || []);\r\n      setFilteredWebsites(websitesWithSellers || []);\r\n    } catch (error) {\r\n      console.error('Unexpected error loading websites:', error);\r\n    } finally {\r\n      clearTimeout(timeoutId);\r\n      setWebsitesLoading(false);\r\n    }\r\n  };\r\n\r\n  // Filter websites based on search and filter criteria\r\n  const filterWebsites = async () => {\r\n    const { search, minDA, maxPrice, category } = websiteFilters;\r\n    \r\n    // If no filters are applied, show the loaded top 50 websites\r\n    if (!search && !minDA && !maxPrice && !category) {\r\n      setFilteredWebsites(websites);\r\n      return;\r\n    }\r\n    \r\n    // If filters are applied, search the entire database\r\n    setWebsitesLoading(true);\r\n    const supabase = getSupabase();\r\n    \r\n    try {\r\n      let query = supabase\r\n        .from('web_sites')\r\n        .select('*');\r\n      \r\n      // Apply DA filter\r\n      if (minDA) {\r\n        query = query.gte('moz_da', parseInt(minDA));\r\n      }\r\n      \r\n      // Apply price filter\r\n      if (maxPrice) {\r\n        query = query.lte('price_to', parseInt(maxPrice));\r\n      }\r\n      \r\n      // Order by quality metrics and limit to reasonable number\r\n      query = query\r\n        .not('moz_da', 'is', null)\r\n        .order('moz_da', { ascending: false })\r\n        .order('similarweb_traffic', { ascending: false })\r\n        .limit(search ? 200 : 100); // Get more results when searching to allow for category filtering\r\n      \r\n      const { data: searchResults, error } = await query;\r\n      \r\n      if (error) {\r\n        console.error('Error searching websites:', error);\r\n        setFilteredWebsites([]);\r\n        setWebsitesLoading(false);\r\n        return;\r\n      }\r\n      \r\n      let filteredResults = searchResults || [];\r\n      \r\n      // Apply search and category filters client-side\r\n      if (search || category) {\r\n        filteredResults = filteredResults.filter(website => {\r\n          let categories = website.category;\r\n          if (typeof categories === 'string') {\r\n            try {\r\n              categories = JSON.parse(categories);\r\n            } catch (e) {\r\n              categories = [];\r\n            }\r\n          }\r\n          if (!Array.isArray(categories)) {\r\n            categories = [];\r\n          }\r\n          \r\n          // Check search filter (link or category)\r\n          const matchesSearch = !search || \r\n            website.link?.toLowerCase().includes(search.toLowerCase()) ||\r\n            categories.some(cat => cat?.toLowerCase().includes(search.toLowerCase()));\r\n          \r\n          // Check category filter\r\n          const matchesCategory = !category || \r\n            categories.some(cat => cat?.toLowerCase().includes(category.toLowerCase()));\r\n          \r\n          return matchesSearch && matchesCategory;\r\n        });\r\n      }\r\n      \r\n      // Get seller names for the filtered results\r\n      const websitesWithSellerIds = filteredResults.filter(w => w.seller_id);\r\n      \r\n      if (websitesWithSellerIds.length === 0) {\r\n        const websitesWithSellers = filteredResults.map(website => ({\r\n          ...website,\r\n          seller_name: 'Unknown'\r\n        }));\r\n        setFilteredWebsites(websitesWithSellers);\r\n        setWebsitesLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const sellerIds = [...new Set(websitesWithSellerIds.map(w => w.seller_id))];\r\n      const { data: sellersData, error: sellersError } = await supabase\r\n        .from('users_settings_tb')\r\n        .select('user_id, name')\r\n        .in('user_id', sellerIds);\r\n      \r\n      if (sellersError) {\r\n        console.error('Error loading sellers for search results:', sellersError);\r\n      }\r\n      \r\n      // Combine the data\r\n      const websitesWithSellers = filteredResults.map(website => ({\r\n        ...website,\r\n        seller_name: sellersData?.find(s => s.user_id === website.seller_id)?.name || 'Unknown'\r\n      }));\r\n      \r\n      setFilteredWebsites(websitesWithSellers);\r\n      \r\n    } catch (error) {\r\n      console.error('Error in filterWebsites:', error);\r\n      setFilteredWebsites([]);\r\n    } finally {\r\n      setWebsitesLoading(false);\r\n    }\r\n  };\r\n\r\n  // Clear all filters\r\n  const clearWebsiteFilters = () => {\r\n    setWebsiteFilters({\r\n      search: '',\r\n      minDA: '',\r\n      maxPrice: '',\r\n      category: ''\r\n    });\r\n  };\r\n\r\n  // Effect to filter websites when filters change\r\n  useEffect(() => {\r\n    filterWebsites();\r\n  }, [websiteFilters, websites]);\r\n\r\n  const loadMyOrders = async (userId) => {\r\n    setOrdersLoading(true);\r\n    const supabase = getSupabase();\r\n    \r\n    try {\r\n      // First get orders - handle case where table might not exist\r\n      const { data: ordersData, error: ordersError } = await supabase\r\n        .from('buyer_orders')\r\n        .select(`\r\n          id,\r\n          article_title,\r\n          budget,\r\n          status,\r\n          created_at,\r\n          website_id,\r\n          seller_id\r\n        `)\r\n        .eq('buyer_id', userId)\r\n        .order('created_at', { ascending: false })\r\n        .limit(100); // Limit to recent orders\r\n\r\n      if (ordersError) {\r\n        console.error('Error loading orders:', ordersError);\r\n        // If table doesn't exist, just set empty orders\r\n        if (ordersError.code === 'PGRST106' || ordersError.message.includes('does not exist')) {\r\n          console.log('buyer_orders table does not exist yet - showing empty state');\r\n          setOrders([]);\r\n        }\r\n        setOrdersLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (!ordersData || ordersData.length === 0) {\r\n        setOrders([]);\r\n        setOrdersLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Get website info for the orders\r\n      const websiteIds = [...new Set(ordersData.map(o => o.website_id))];\r\n      const { data: websitesData, error: websitesError } = await supabase\r\n        .from('web_sites')\r\n        .select('id, link, badge, category_1')\r\n        .in('id', websiteIds);\r\n\r\n      // Get seller names for the orders\r\n      const sellerIds = [...new Set(ordersData.map(o => o.seller_id))];\r\n      const { data: sellersData, error: sellersError } = await supabase\r\n        .from('users_settings_tb')\r\n        .select('user_id, name')\r\n        .in('user_id', sellerIds);\r\n\r\n      if (websitesError) {\r\n        console.error('Error loading websites for orders:', websitesError);\r\n      }\r\n      if (sellersError) {\r\n        console.error('Error loading sellers for orders:', sellersError);\r\n      }\r\n\r\n      // Combine the data\r\n      const ordersWithDetails = ordersData.map(order => ({\r\n        ...order,\r\n        web_sites: websitesData?.find(w => w.id === order.website_id) || null,\r\n        seller_name: sellersData?.find(s => s.user_id === order.seller_id)?.name || 'Unknown'\r\n      }));\r\n\r\n      setOrders(ordersWithDetails || []);\r\n    } catch (error) {\r\n      console.error('Unexpected error loading orders:', error);\r\n      setOrders([]);\r\n    } finally {\r\n      setOrdersLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOrderClick = (website) => {\r\n    setSelectedWebsite(website);\r\n    setOrderData({\r\n      article_title: '',\r\n      article_content: '',\r\n      target_url: '',\r\n      anchor_text: '',\r\n      special_requirements: '',\r\n      budget: website.price_from || ''\r\n    });\r\n    setShowOrderModal(true);\r\n  };\r\n\r\n  const handleSubmitOrder = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!orderData.article_title.trim() || !orderData.article_content.trim() || !orderData.target_url.trim()) {\r\n      setMessage('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const supabase = getSupabase();\r\n      \r\n      // Debug: Check current user and website data\r\n      console.log('Current user:', user);\r\n      console.log('Selected website:', selectedWebsite);\r\n      console.log('Order data:', orderData);\r\n      \r\n      // Handle missing seller_id for legacy websites\r\n      let sellerId = selectedWebsite.seller_id || selectedWebsite.added_by_user;\r\n      \r\n      if (!sellerId) {\r\n        console.warn('Website missing seller_id, using buyer as seller for now:', selectedWebsite);\r\n        sellerId = user.id; // Temporary fallback - use buyer as seller\r\n      }\r\n      \r\n      const orderPayload = {\r\n        buyer_id: user.id,\r\n        seller_id: sellerId,\r\n        website_id: selectedWebsite.id,\r\n        article_title: orderData.article_title,\r\n        article_content: orderData.article_content,\r\n        target_url: orderData.target_url,\r\n        anchor_text: orderData.anchor_text || null,\r\n        special_requirements: orderData.special_requirements || null,\r\n        budget: parseFloat(orderData.budget) || 0,\r\n        status: 'pending'\r\n        // Remove created_at - let database handle it\r\n      };\r\n\r\n      console.log('Submitting order payload:', orderPayload);\r\n      console.log('Payload types:', {\r\n        buyer_id: typeof orderPayload.buyer_id,\r\n        seller_id: typeof orderPayload.seller_id,\r\n        website_id: typeof orderPayload.website_id,\r\n        budget: typeof orderPayload.budget\r\n      });\r\n      \r\n      // Test table access first\r\n      console.log('Testing table access...');\r\n      const { data: testData, error: testError } = await supabase\r\n        .from('buyer_orders')\r\n        .select('id')\r\n        .limit(1);\r\n      \r\n      console.log('Table access test:', { testData, testError });\r\n      \r\n      const { data, error } = await supabase\r\n        .from('buyer_orders')\r\n        .insert([orderPayload])\r\n        .select();\r\n\r\n      if (error) {\r\n        console.error('Error creating order:', error);\r\n        console.error('Error details:', {\r\n          code: error.code,\r\n          message: error.message,\r\n          details: error.details,\r\n          hint: error.hint\r\n        });\r\n        setMessage(`Error creating order: ${error.message}`);\r\n      } else {\r\n        console.log('Order created successfully:', data);\r\n        setMessage('Order placed successfully!');\r\n        setShowOrderModal(false);\r\n        setOrderData({\r\n          article_title: '',\r\n          article_content: '',\r\n          target_url: '',\r\n          anchor_text: '',\r\n          special_requirements: '',\r\n          budget: ''\r\n        });\r\n        // Optimistically update the orders list\r\n        const newOrder = {\r\n          id: Date.now(), // Temporary ID\r\n          article_title: orderData.article_title,\r\n          budget: parseFloat(orderData.budget) || 0,\r\n          status: 'pending',\r\n          created_at: new Date().toISOString(),\r\n          web_sites: {\r\n            link: selectedWebsite.link,\r\n            badge: selectedWebsite.badge,\r\n            category_1: selectedWebsite.category_1\r\n          },\r\n          seller_name: selectedWebsite.seller_name\r\n        };\r\n        setOrders(prev => [newOrder, ...prev]);\r\n        \r\n        // Refresh orders in background\r\n        setTimeout(() => loadMyOrders(user.id), 1000);\r\n        setTimeout(() => setMessage(''), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting order:', error);\r\n      setMessage('An error occurred. Please try again.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'pending': return 'bg-yellow-900/50 text-yellow-300';\r\n      case 'accepted': return 'bg-blue-900/50 text-blue-300';\r\n      case 'in_progress': return 'bg-purple-900/50 text-purple-300';\r\n      case 'completed': return 'bg-green-900/50 text-green-300';\r\n      case 'rejected': return 'bg-red-900/50 text-red-300';\r\n      default: return 'bg-gray-700 text-gray-300';\r\n    }\r\n  };\r\n\r\n  if (loading || !user) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 text-gray-100\">\r\n        <Navbar />\r\n        <div className=\"absolute inset-0 bg-gradient-to-br from-gray-900 via-gray-800 to-black opacity-90 pointer-events-none\"></div>\r\n        <div className=\"relative z-10 max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8 pt-24\">\r\n          <div className=\"mb-8\">\r\n            <div className=\"h-8 bg-gray-700 rounded w-64 animate-pulse\"></div>\r\n            <div className=\"h-4 bg-gray-700 rounded w-96 mt-2 animate-pulse\"></div>\r\n          </div>\r\n          <div className=\"border-b border-gray-600 mb-6\">\r\n            <div className=\"flex space-x-8\">\r\n              <div className=\"h-8 bg-gray-700 rounded w-32 animate-pulse\"></div>\r\n              <div className=\"h-8 bg-gray-700 rounded w-24 animate-pulse\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-center items-center h-64\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-100\">\r\n      <Navbar />\r\n      <div className=\"absolute inset-0 bg-gradient-to-br from-gray-900 via-gray-800 to-black opacity-90 pointer-events-none\"></div>\r\n      \r\n      <div className=\"relative z-10 max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8 pt-24\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-white\">Guest Posting Orders</h1>\r\n          <p className=\"mt-2 text-gray-400\">Browse available websites and place your guest posting orders</p>\r\n        </div>\r\n\r\n        {message && (\r\n          <div className={`mb-6 p-4 rounded-md ${message.includes('Error') ? 'bg-red-900/50 text-red-300 border border-red-700' : 'bg-green-900/50 text-green-300 border border-green-700'}`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        {/* Tab Navigation */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"border-b border-gray-600\">\r\n            <nav className=\"-mb-px flex space-x-8\">\r\n              <button\r\n                onClick={() => {\r\n                  setActiveTab('browse');\r\n                  loadWebsites(); // Lazy load websites when tab is clicked\r\n                }}\r\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === 'browse'\r\n                    ? 'border-blue-500 text-blue-400'\r\n                    : 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-500'\r\n                }`}\r\n              >\r\n                Browse Websites ({filteredWebsites.length})\r\n              </button>\r\n              <button\r\n                onClick={() => setActiveTab('my-orders')}\r\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === 'my-orders'\r\n                    ? 'border-blue-500 text-blue-400'\r\n                    : 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-500'\r\n                }`}\r\n              >\r\n                My Orders ({orders.length})\r\n              </button>\r\n              {activeTab === 'my-orders' && (\r\n                <button\r\n                  onClick={() => user && loadMyOrders(user.id)}\r\n                  disabled={ordersLoading}\r\n                  className=\"ml-4 px-3 py-1 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n                >\r\n                  {ordersLoading ? 'Refreshing...' : 'Refresh'}\r\n                </button>\r\n              )}\r\n            </nav>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Browse Websites Tab */}\r\n        {activeTab === 'browse' && (\r\n          <>\r\n            {/* Search and Filter Bar */}\r\n            <div className=\"mb-6 bg-gray-800 p-6 rounded-2xl border border-gray-700\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search websites or categories...\"\r\n                  value={websiteFilters.search}\r\n                  onChange={(e) => setWebsiteFilters({...websiteFilters, search: e.target.value})}\r\n                  className=\"p-3 bg-gray-700 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none text-white\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Min DA\"\r\n                  value={websiteFilters.minDA}\r\n                  onChange={(e) => setWebsiteFilters({...websiteFilters, minDA: e.target.value})}\r\n                  className=\"p-3 bg-gray-700 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none text-white\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Max Price\"\r\n                  value={websiteFilters.maxPrice}\r\n                  onChange={(e) => setWebsiteFilters({...websiteFilters, maxPrice: e.target.value})}\r\n                  className=\"p-3 bg-gray-700 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none text-white\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Category\"\r\n                  value={websiteFilters.category}\r\n                  onChange={(e) => setWebsiteFilters({...websiteFilters, category: e.target.value})}\r\n                  className=\"p-3 bg-gray-700 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none text-white\"\r\n                />\r\n              </div>\r\n              \r\n              {/* Filter Actions */}\r\n              <div className=\"flex justify-between items-center\">\r\n                <p className=\"text-gray-400 text-sm\">\r\n                  {(() => {\r\n                    const hasFilters = websiteFilters.search || websiteFilters.minDA || websiteFilters.maxPrice || websiteFilters.category;\r\n                    if (hasFilters) {\r\n                      return `Found ${filteredWebsites.length} websites matching your filters`;\r\n                    } else {\r\n                      return `Showing top ${filteredWebsites.length} websites`;\r\n                    }\r\n                  })()}\r\n                </p>\r\n                <button\r\n                  onClick={clearWebsiteFilters}\r\n                  className=\"bg-gray-700 hover:bg-gray-600 text-gray-300 px-4 py-2 rounded-lg font-medium transition-all duration-300 flex items-center gap-2\"\r\n                >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                  Clear Filters\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {websitesLoading ? (\r\n              <div className=\"flex justify-center items-center h-64\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n                <p className=\"ml-4 text-gray-400\">\r\n                  {websiteFilters.search || websiteFilters.minDA || websiteFilters.maxPrice || websiteFilters.category \r\n                    ? 'Searching database...' \r\n                    : 'Loading top websites...'}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {filteredWebsites.length === 0 ? (\r\n                  <div className=\"col-span-full text-center py-12\">\r\n                    <svg className=\"w-16 h-16 text-gray-500 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                    </svg>\r\n                    <p className=\"text-gray-400 text-lg\">\r\n                      {(() => {\r\n                        const hasFilters = websiteFilters.search || websiteFilters.minDA || websiteFilters.maxPrice || websiteFilters.category;\r\n                        if (websites.length === 0) {\r\n                          return 'No websites available yet';\r\n                        } else if (hasFilters) {\r\n                          return 'No websites match your search criteria';\r\n                        } else {\r\n                          return 'No top websites found';\r\n                        }\r\n                      })()}\r\n                    </p>\r\n                    <p className=\"text-gray-500 text-sm mt-2\">\r\n                      {(() => {\r\n                        const hasFilters = websiteFilters.search || websiteFilters.minDA || websiteFilters.maxPrice || websiteFilters.category;\r\n                        if (websites.length === 0) {\r\n                          return 'Sellers haven\\'t added any websites yet. Check back later or contact sellers directly.';\r\n                        } else if (hasFilters) {\r\n                          return 'Try adjusting your search criteria or clear filters to see more results.';\r\n                        } else {\r\n                          return 'No high-quality websites found. Try refreshing or check back later.';\r\n                        }\r\n                      })()}\r\n                    </p>\r\n                    <div className=\"mt-4\">\r\n                      {websites.length === 0 ? (\r\n                        <button \r\n                          onClick={() => {\r\n                            setWebsites([]);\r\n                            setFilteredWebsites([]);\r\n                            loadWebsites();\r\n                          }}\r\n                          className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm\"\r\n                        >\r\n                          Refresh\r\n                        </button>\r\n                      ) : (\r\n                        <button \r\n                          onClick={clearWebsiteFilters}\r\n                          className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm\"\r\n                        >\r\n                          Clear Filters\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  filteredWebsites.map((website) => (\r\n              <div key={website.id} className=\"bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow border border-gray-700\">\r\n                <div className=\"p-6\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"text-lg font-semibold text-white truncate\">{website.link}</h3>\r\n                      <div className=\"flex items-center gap-2 mt-1\">\r\n                        {website.badge && (\r\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-900/50 text-blue-300\">\r\n                            {website.badge}\r\n                          </span>\r\n                        )}\r\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-900/50 text-green-300\">\r\n                          DA: {website.moz_da || 'N/A'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Categories */}\r\n                  <div className=\"mb-4\">\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {(() => {\r\n                        let categories = website.category;\r\n                        if (typeof categories === 'string') {\r\n                          try {\r\n                            categories = JSON.parse(categories);\r\n                          } catch (e) {\r\n                            categories = [];\r\n                          }\r\n                        }\r\n                        if (!Array.isArray(categories)) {\r\n                          categories = [];\r\n                        }\r\n                        return categories.slice(0, 3).map((category, index) => (\r\n                          <span \r\n                            key={index}\r\n                            className=\"bg-purple-900/50 text-purple-300 px-2 py-1 rounded-md text-xs font-medium\"\r\n                          >\r\n                            {category}\r\n                          </span>\r\n                        ));\r\n                      })()}\r\n                      {(() => {\r\n                        let categories = website.category;\r\n                        if (typeof categories === 'string') {\r\n                          try {\r\n                            categories = JSON.parse(categories);\r\n                          } catch (e) {\r\n                            categories = [];\r\n                          }\r\n                        }\r\n                        if (!Array.isArray(categories)) {\r\n                          categories = [];\r\n                        }\r\n                        return categories.length > 3 && (\r\n                          <span className=\"bg-gray-700 text-gray-300 px-2 py-1 rounded-md text-xs font-medium\">\r\n                            +{categories.length - 3} more\r\n                          </span>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-400\">Price:</span>\r\n                        <span className=\"text-gray-300 font-medium\">${website.price_from} - ${website.price_to}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-400\">Traffic:</span>\r\n                        <span className=\"text-gray-300 font-medium\">\r\n                          {website.similarweb_traffic ? Number(website.similarweb_traffic).toLocaleString() : 'N/A'}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-400\">TAT:</span>\r\n                        <span className=\"text-gray-300 font-medium\">{website.tat || 'N/A'}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-400\">AS:</span>\r\n                        <span className=\"text-gray-300 font-medium\">{website.semrush_as || 'N/A'}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-400\">DR:</span>\r\n                        <span className=\"text-gray-300 font-medium\">{website.ahrefs_dr_range || 'N/A'}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-gray-400\">Link Type:</span>\r\n                        <span className={`text-xs font-medium px-2 py-1 rounded ${\r\n                          website.link_attribution_type === 'Dofollow' \r\n                            ? 'bg-green-900/50 text-green-300' \r\n                            : 'bg-yellow-900/50 text-yellow-300'\r\n                        }`}>\r\n                          {website.link_attribution_type || 'N/A'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"mb-4\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-gray-400 text-sm\">Seller:</span>\r\n                      <span className=\"text-gray-300 font-medium text-sm\">{website.seller_name || 'Unknown'}</span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <button\r\n                    onClick={() => handleOrderClick(website)}\r\n                    className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors font-medium\"\r\n                  >\r\n                    Place Order\r\n                  </button>\r\n                </div>\r\n              </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {/* My Orders Tab */}\r\n        {activeTab === 'my-orders' && (\r\n          <>\r\n            {ordersLoading ? (\r\n              <div className=\"flex justify-center items-center h-64\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"bg-gray-800 shadow-md rounded-lg overflow-hidden border border-gray-700\">\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full divide-y divide-gray-700\">\r\n                <thead className=\"bg-gray-700/50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                      Website\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                      Article Title\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                      Budget\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                      Status\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                      Seller\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                      Date\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-gray-800 divide-y divide-gray-700\">\r\n                  {orders.map((order) => (\r\n                    <tr key={order.id} className=\"hover:bg-gray-700/50\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-100\">{order.web_sites?.link}</div>\r\n                        <div className=\"text-sm text-gray-400\">{order.web_sites?.category_1}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm text-gray-100 max-w-xs truncate\">{order.article_title}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-100\">\r\n                        ${order.budget}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(order.status)}`}>\r\n                          {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-100\">\r\n                        {order.seller_name || 'Unknown'}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">\r\n                        {new Date(order.created_at).toLocaleDateString()}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              {orders.length === 0 && (\r\n                <div className=\"text-center py-8 text-gray-400\">\r\n                  No orders found. Start by browsing websites and placing your first order!\r\n                </div>\r\n              )}\r\n            </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Order Modal */}\r\n      {showOrderModal && selectedWebsite && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n          <div className=\"relative top-20 mx-auto p-5 border border-gray-600 w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-gray-800\">\r\n            <div className=\"mt-3\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-medium text-white\">\r\n                  Place Order for {selectedWebsite.link}\r\n                </h3>\r\n                <button\r\n                  onClick={() => setShowOrderModal(false)}\r\n                  className=\"text-gray-400 hover:text-gray-300\"\r\n                >\r\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              \r\n              <form onSubmit={handleSubmitOrder} className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                    Article Title *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={orderData.article_title}\r\n                    onChange={(e) => setOrderData({...orderData, article_title: e.target.value})}\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-white\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                    Article Content *\r\n                  </label>\r\n                  <textarea\r\n                    value={orderData.article_content}\r\n                    onChange={(e) => setOrderData({...orderData, article_content: e.target.value})}\r\n                    rows={6}\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-white\"\r\n                    placeholder=\"Write your article content here...\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                    Target URL *\r\n                  </label>\r\n                  <input\r\n                    type=\"url\"\r\n                    value={orderData.target_url}\r\n                    onChange={(e) => setOrderData({...orderData, target_url: e.target.value})}\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-white\"\r\n                    placeholder=\"https://example.com\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                    Anchor Text\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={orderData.anchor_text}\r\n                    onChange={(e) => setOrderData({...orderData, anchor_text: e.target.value})}\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-white\"\r\n                    placeholder=\"Link anchor text\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                    Budget ($)\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={orderData.budget}\r\n                    onChange={(e) => setOrderData({...orderData, budget: e.target.value})}\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-white\"\r\n                    min={selectedWebsite.price_from}\r\n                    max={selectedWebsite.price_to}\r\n                    step=\"0.01\"\r\n                  />\r\n                  <p className=\"text-sm text-gray-400 mt-1\">\r\n                    Price range: ${selectedWebsite.price_from} - ${selectedWebsite.price_to}\r\n                  </p>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                    Special Requirements\r\n                  </label>\r\n                  <textarea\r\n                    value={orderData.special_requirements}\r\n                    onChange={(e) => setOrderData({...orderData, special_requirements: e.target.value})}\r\n                    rows={3}\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-white\"\r\n                    placeholder=\"Any special requirements or notes...\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"flex justify-end space-x-3 pt-4\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowOrderModal(false)}\r\n                    className=\"px-4 py-2 text-sm font-medium text-gray-300 bg-gray-700 rounded-md hover:bg-gray-600 border border-gray-600\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n                  >\r\n                    {submitting ? 'Placing Order...' : 'Place Order'}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}