{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.js"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\r\nimport { NextResponse } from 'next/server'\r\n\r\n// Simple in-memory cache for user settings (you can replace with Redis in production)\r\nconst userSettingsCache = new Map();\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\r\n\r\nexport async function middleware(request) {\r\n  let response = NextResponse.next({\r\n    request: {\r\n      headers: request.headers,\r\n    },\r\n  })\r\n\r\n  const supabase = createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return request.cookies.getAll()\r\n        },\r\n        setAll(cookiesToSet) {\r\n          cookiesToSet.forEach(({ name, value, options }) => {\r\n            request.cookies.set(name, value)\r\n            response.cookies.set(name, value, options)\r\n          })\r\n        },\r\n      },\r\n    }\r\n  )\r\n\r\n  const { data: { user } } = await supabase.auth.getUser()\r\n  \r\n  // Define protected routes that require authentication\r\n  const protectedRoutes = [\r\n    '/dashboard',\r\n    '/buyer/buyer-dashboard', \r\n    '/seller/seller-dashboard',\r\n    '/add-website',\r\n    '/my-orders',\r\n    '/manage-orders',\r\n    '/my-websites'\r\n  ]\r\n\r\n  // Check if the current path is a protected route\r\n  const isProtectedRoute = protectedRoutes.some(route => \r\n    request.nextUrl.pathname.startsWith(route)\r\n  )\r\n\r\n  // If user is not authenticated and trying to access protected route\r\n  if (!user && isProtectedRoute) {\r\n    return NextResponse.redirect(new URL('/', request.url))\r\n  }\r\n\r\n  // If user is authenticated, check role-based access\r\n  if (user && isProtectedRoute) {\r\n    try {\r\n      // Check cache first\r\n      const cacheKey = user.id;\r\n      const cached = userSettingsCache.get(cacheKey);\r\n      let userSettings;\r\n\r\n      if (cached && (Date.now() - cached.timestamp) < CACHE_DURATION) {\r\n        userSettings = cached.data;\r\n      } else {\r\n        // Fetch user settings to determine role (only if not cached)\r\n        const { data: settings, error } = await supabase\r\n          .from('users_settings_tb')\r\n          .select('role')\r\n          .eq('user_id', user.id)\r\n          .single()\r\n\r\n        if (error || !settings) {\r\n          console.error('Middleware - Error fetching user settings:', error)\r\n          return NextResponse.redirect(new URL('/', request.url))\r\n        }\r\n\r\n        userSettings = settings;\r\n        \r\n        // Cache the result\r\n        userSettingsCache.set(cacheKey, {\r\n          data: userSettings,\r\n          timestamp: Date.now()\r\n        });\r\n      }\r\n\r\n      const { role } = userSettings\r\n      const pathname = request.nextUrl.pathname\r\n\r\n      // Role-based routing logic\r\n      if (role === 'Buyer') {\r\n        // Buyer-specific routes\r\n        if (pathname.startsWith('/seller/seller-dashboard') || \r\n            pathname.startsWith('/add-website') ||\r\n            pathname.startsWith('/manage-orders') ||\r\n            pathname.startsWith('/my-websites')) {\r\n          return NextResponse.redirect(new URL('/buyer/buyer-dashboard', request.url))\r\n        }\r\n        // Redirect old dashboard to buyer dashboard\r\n        if (pathname === '/dashboard') {\r\n          return NextResponse.redirect(new URL('/buyer/buyer-dashboard', request.url))\r\n        }\r\n      } else if (role === 'Seller') {\r\n        // Seller-specific routes\r\n        if (pathname.startsWith('/buyer/buyer-dashboard') || \r\n            pathname.startsWith('/my-orders')) {\r\n          return NextResponse.redirect(new URL('/seller/seller-dashboard', request.url))\r\n        }\r\n        // Redirect old dashboard to seller dashboard\r\n        if (pathname === '/dashboard') {\r\n          return NextResponse.redirect(new URL('/seller/seller-dashboard', request.url))\r\n        }\r\n      } else {\r\n        // For users without specific roles, redirect to general dashboard\r\n        if (pathname.startsWith('/buyer/buyer-dashboard') || \r\n            pathname.startsWith('/seller/seller-dashboard')) {\r\n          return NextResponse.redirect(new URL('/dashboard', request.url))\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Middleware error:', error)\r\n      return NextResponse.redirect(new URL('/', request.url))\r\n    }\r\n  }\r\n\r\n  return response\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\r\n  ],\r\n}\r\n  "],"names":[],"mappings":"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"}}]
}