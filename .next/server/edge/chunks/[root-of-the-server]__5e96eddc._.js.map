{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.js"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { NextResponse } from 'next/server'\n\nexport async function middleware(request) {\n  let response = NextResponse.next({\n    request: {\n      headers: request.headers,\n    },\n  })\n\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n    {\n      cookies: {\n        getAll() {\n          return request.cookies.getAll()\n        },\n        setAll(cookiesToSet) {\n          cookiesToSet.forEach(({ name, value, options }) => request.cookies.set(name, value))\n          response = NextResponse.next({\n            request,\n          })\n          cookiesToSet.forEach(({ name, value, options }) =>\n            response.cookies.set(name, value, options)\n          )\n        },\n      },\n    }\n  )\n\n  // Define protected routes that require authentication\n  const protectedRoutes = [\n    '/dashboard',\n    '/buyer',\n    '/seller', \n    '/agent'\n  ]\n  \n  const isProtectedRoute = protectedRoutes.some(route => \n    request.nextUrl.pathname.startsWith(route)\n  )\n\n  // Skip auth check for public routes\n  if (!isProtectedRoute) {\n    return response\n  }\n\n  try {\n    // Add timeout to auth check with AbortController\n    const controller = new AbortController()\n    const timeoutId = setTimeout(() => controller.abort(), 8000) // Increase timeout to 8 seconds\n    \n    const { data: { user }, error: authError } = await supabase.auth.getUser()\n    clearTimeout(timeoutId)\n\n    if (authError) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error('Middleware auth error:', authError.message)\n      }\n      // Redirect to home if auth fails\n      return NextResponse.redirect(new URL('/', request.url))\n    }\n\n    if (user) {\n      // Add timeout for role fetch as well\n      const roleController = new AbortController()\n      const roleTimeoutId = setTimeout(() => roleController.abort(), 5000)\n      \n      try {\n        const { data: settings, error: roleError } = await supabase\n          .from('users_settings_tb')\n          .select('role, parent_buyer_id')\n          .eq('user_id', user.id)\n          .single()\n        \n        clearTimeout(roleTimeoutId)\n\n        if (roleError) {\n          if (process.env.NODE_ENV === 'development') {\n            console.error('Error fetching user role in middleware:', roleError)\n          }\n          // If we can't get role, allow access but log error\n          return response\n        }\n\n        if (settings && settings.role) {\n          const userRole = settings.role\n          const pathname = request.nextUrl.pathname\n\n          // Role-based redirects with improved logic\n          if (userRole === 'Agent') {\n            if (!pathname.startsWith('/agent')) {\n              return NextResponse.redirect(new URL('/agent/dashboard', request.url))\n            }\n          } else if (userRole === 'Buyer') {\n            if (!pathname.startsWith('/buyer')) {\n              return NextResponse.redirect(new URL('/buyer/buyer-dashboard', request.url))\n            }\n          } else if (userRole === 'Seller') {\n            if (!pathname.startsWith('/seller')) {\n              return NextResponse.redirect(new URL('/seller/seller-dashboard', request.url))\n            }\n          } else {\n            // Unknown role, redirect to general dashboard\n            if (pathname !== '/dashboard') {\n              return NextResponse.redirect(new URL('/dashboard', request.url))\n            }\n          }\n        }\n      } catch (roleError) {\n        if (roleError.name === 'AbortError') {\n          if (process.env.NODE_ENV === 'development') {\n            console.warn('Role fetch timeout, allowing access')\n          }\n          return response\n        }\n        throw roleError\n      }\n    } else {\n      // No user, redirect to home\n      return NextResponse.redirect(new URL('/', request.url))\n    }\n\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn('Auth timeout, allowing access')\n      }\n      // On timeout, allow access for better UX\n      return response\n    }\n    \n    if (process.env.NODE_ENV === 'development') {\n      console.error('Middleware auth error:', error.message)\n    }\n    \n    // If auth check fails and trying to access protected route, redirect to home\n    if (isProtectedRoute) {\n      return NextResponse.redirect(new URL('/', request.url))\n    }\n  }\n\n  return response\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public folder\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\n  ],\n}\n  "],"names":[],"mappings":"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"}}]
}